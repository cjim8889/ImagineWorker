name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ "created" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        model_name: ['cjim8889/AllysMix3', 'Lykon/DreamShaper', 'XpucT/Deliberate', 'windwhinny/chilloutmix', 'zhg/rpg_v4', 'SG161222/Realistic_Vision_V2.0']
    steps:
    - name: Maximize build disk space
      uses: easimon/maximize-build-space@v7
      with:
        root-reserve-mb: 46080
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: ghcr_meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=edge,branch=main,pattern=latest
    - name: Generate new tag with model_name
      id: generate_tag
      run: |
        TAG_NAME="$(echo ${{ matrix.model_name }} | tr '/' '-')"
        echo "TAG_NAME=${TAG_NAME,,}" >> $GITHUB_ENV
        echo "REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
        echo "Generated tag: $TAG_NAME"
    # Build and push to GHCR
    - name: Build and push to GHCR
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ steps.ghcr_meta.outputs.tags }}
          ${{ env.REGISTRY }}/${{ env.REPO }}:${{ env.TAG_NAME }}
        labels: ${{ steps.ghcr_meta.outputs.labels }}
        build-args: |
          MODEL_NAME=${{ matrix.model_name }}
